import streamlit as st
import tensorflow as tf
import numpy as np
from tensorflow.keras.applications import ResNet50V2
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
import matplotlib.pyplot as plt

# Function to preprocess image
def preprocess_image(img):
    img = tf.image.resize(img, [224, 224])
    img = img / 255.0  # Normalize pixel values
    return img

# Load model
@st.cache(allow_output_mutation=True)
def load_saved_model():
    model = load_model("model.h5")
    return model

model = load_saved_model()

# Function to predict
def predict(image_path):
    img = image.load_img(image_path, target_size=(224, 224))
    st.image(img, caption="Uploaded Image.", use_column_width=True)
    st.write("")
    st.write("Classifying...")

    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)
    img_array = preprocess_image(img_array)
    prediction = model.predict(img_array)
    return prediction

# Streamlit UI
st.title("Pneumonia Detection App")

uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "png"])

if uploaded_file is not None:
    prediction = predict(uploaded_file)
    pneumonia_probability = prediction[0][0]

    st.write("Prediction:")
    if pneumonia_probability > 0.5:
        st.write("Pneumonia (Probability: {:.2f}%)".format(pneumonia_probability * 100))
    else:
        st.write("Normal (Probability: {:.2f}%)".format((1 - pneumonia_probability) * 100))
